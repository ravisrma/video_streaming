name: Full Terraform Deploy & Artifacts

on:
  workflow_dispatch:
    inputs:
      action:
          description: 'Action to perform'
          required: true
          type: choice
          options:
            - deploy
            - cleanup
            - frontend
          default: deploy

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4.2.2

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4.0.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip jq
          pip install awscli

      - name: Package Lambda ZIPs
        run: |
          chmod +x deploy.sh
          ./deploy.sh package
      - name: Terraform Init
        if: ${{ github.event.inputs.action == 'deploy' }}
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: |
          cd terraform
          terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          cd terraform
          terraform validate -no-color


      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          cd terraform
          terraform plan -no-color

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Export Terraform Outputs
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          cd terraform
          terraform output -json > outputs.json

      - name: Run artifact deployment script
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          chmod +x deploy.sh
          ./deploy.sh deploy

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'cleanup' }}
        run: |
          cd terraform
          terraform destroy -auto-approve

      - name: Run frontend update only
        if: ${{ github.event.inputs.action == 'frontend' }}
        run: |
          chmod +x deploy.sh
          ./deploy.sh frontend
